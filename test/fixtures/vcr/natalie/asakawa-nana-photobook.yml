---
http_interactions:
- request:
    method: get
    uri: http://natalie.mu/music/news/213794
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Date:
      - Thu, 26 Apr 2018 05:15:44 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '178'
      Connection:
      - keep-alive
      Location:
      - https://natalie.mu/music/news/213794
      X-Frame-Options:
      - SAMEORIGIN
      Strict-Transport-Security:
      - max-age=31536000; preload
      Accept-Ranges:
      - bytes
      Age:
      - '0'
      X-Cache:
      - miss
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>301 Moved Permanently</title></head>\r\n<body
        bgcolor=\"white\">\r\n<center><h1>301 Moved Permanently</h1></center>\r\n<hr><center>nginx</center>\r\n</body>\r\n</html>\r\n"
    http_version: 
  recorded_at: Thu, 26 Apr 2018 05:15:44 GMT
- request:
    method: get
    uri: https://natalie.mu/music/news/213794
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 26 Apr 2018 05:15:45 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Content-Length:
      - '15947'
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=3600, must-revalidate, public
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Allow-Origin:
      - https://natalie.mu
      Accept-Ranges:
      - bytes
      Age:
      - '0'
      X-Cache:
      - miss
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 26 Apr 2018 05:15:45 GMT
recorded_with: VCR 4.0.0
