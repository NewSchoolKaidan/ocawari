---
http_interactions:
- request:
    method: get
    uri: http://moe48jp.tumblr.com/post/92436537774
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty
      Date:
      - Sun, 09 Apr 2017 03:52:02 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - tmgioct=58e9afe2b00e900284529660; expires=Wed, 07-Apr-2027 03:52:02 GMT; Max-Age=315360000;
        path=/; domain=.tumblr.com; HttpOnly
      P3p:
      - 'CP="Tumblr''s privacy policy is available here: https://www.tumblr.com/policy/en/privacy"'
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Tumblr-User:
      - moe48jp
      X-Tumblr-Pixel-0:
      - https://px.srvcs.tumblr.com/impixu?T=1491709922&J=eyJ0eXBlIjoidXJsIiwidXJsIjoiaHR0cDpcL1wvbW9lNDhqcC50dW1ibHIuY29tXC9wb3N0XC85MjQzNjUzNzc3NCIsInJlcXR5cGUiOjAsInJvdXRlIjoiXC9wb3N0XC86aWQifQ==&U=MDHHJBODJC&K=8f9234d89c218ad4289cf196c1d9d656080adeb645ffc9ced8e5ea0b4f5750e1--https://px.srvcs.tumblr.com/impixu?T=1491709922&J=eyJ0eXBlIjoicG9zdCIsInVybCI6Imh0dHA6XC9cL21vZTQ4anAudHVtYmxyLmNvbVwvcG9zdFwvOTI0MzY1Mzc3NzQiLCJyZXF0eXBlIjowLCJyb3V0ZSI6IlwvcG9zdFwvOmlkIiwicG9zdHMiOlt7InBvc3RpZCI6Ijky
      X-Tumblr-Pixel-1:
      - NDM2NTM3Nzc0IiwiYmxvZ2lkIjoiMTI3MDIwNDQ3Iiwic291cmNlIjozM31dfQ==&U=IDDOAPJCBK&K=a4f7370eb28d9aac69f1d0831352b202961f9cf5a534cd7014743bb36ad8d41f
      X-Tumblr-Pixel:
      - '2'
      Link:
      - "<http://68.media.tumblr.com/avatar_499c3c4cf0ae_128.png>; rel=icon"
      - "<https://tmblr.co/ZTEP1r1M5fQ6k>; rel=shorturl"
      X-Ua-Compatible:
      - IE=Edge,chrome=1
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 09 Apr 2017 03:52:03 GMT
recorded_with: VCR 3.0.3
